{
  "accounts": [
    {
      "name": "DAO",
      "type": {
        "fields": [
          {
            "name": "treasuryPdaBump",
            "type": "u8"
          },
          {
            "name": "treasury",
            "type": "publicKey"
          },
          {
            "name": "metaMint",
            "type": "publicKey"
          },
          {
            "name": "usdcMint",
            "type": "publicKey"
          },
          {
            "name": "proposalCount",
            "type": "u32"
          },
          {
            "name": "lastProposalSlot",
            "type": "u64"
          },
          {
            "name": "passThresholdBps",
            "type": "u16"
          },
          {
            "name": "baseBurnLamports",
            "type": "u64"
          },
          {
            "name": "burnDecayPerSlotLamports",
            "type": "u64"
          },
          {
            "name": "slotsPerProposal",
            "type": "u64"
          },
          {
            "name": "marketTakerFee",
            "type": "i64"
          },
          {
            "name": "twapExpectedValue",
            "type": "u64"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "Proposal",
      "type": {
        "fields": [
          {
            "name": "number",
            "type": "u32"
          },
          {
            "name": "proposer",
            "type": "publicKey"
          },
          {
            "name": "descriptionUrl",
            "type": "string"
          },
          {
            "name": "slotEnqueued",
            "type": "u64"
          },
          {
            "name": "state",
            "type": {
              "defined": "ProposalState"
            }
          },
          {
            "name": "instruction",
            "type": {
              "defined": "ProposalInstruction"
            }
          },
          {
            "name": "openbookTwapPassMarket",
            "type": "publicKey"
          },
          {
            "name": "openbookTwapFailMarket",
            "type": "publicKey"
          },
          {
            "name": "openbookPassMarket",
            "type": "publicKey"
          },
          {
            "name": "openbookFailMarket",
            "type": "publicKey"
          },
          {
            "name": "baseVault",
            "type": "publicKey"
          },
          {
            "name": "quoteVault",
            "type": "publicKey"
          }
        ],
        "kind": "struct"
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "msg": "Either the `pass_market` or the `fail_market`s tokens doesnt match the vaults supplied",
      "name": "InvalidMarket"
    },
    {
      "code": 6001,
      "msg": "`TWAPMarket` must have an `initial_slot` within 50 slots of the proposals `slot_enqueued`",
      "name": "TWAPMarketTooOld"
    },
    {
      "code": 6002,
      "msg": "`TWAPMarket` has the wrong `expected_value`",
      "name": "TWAPMarketInvalidExpectedValue"
    },
    {
      "code": 6003,
      "msg": "One of the vaults has an invalid `settlement_authority`",
      "name": "InvalidSettlementAuthority"
    },
    {
      "code": 6004,
      "msg": "Proposal is too young to be executed or rejected",
      "name": "ProposalTooYoung"
    },
    {
      "code": 6005,
      "msg": "Markets too young for proposal to be finalized",
      "name": "MarketsTooYoung"
    },
    {
      "code": 6006,
      "msg": "The market dictates that this proposal cannot pass",
      "name": "ProposalCannotPass"
    },
    {
      "code": 6007,
      "msg": "This proposal has already been finalized",
      "name": "ProposalAlreadyFinalized"
    },
    {
      "code": 6008,
      "msg": "A conditional vault has an invalid nonce. A nonce should encode pass = 0 / fail = 1 in its most significant bit, base = 0 / quote = 1 in its second most significant bit, and the proposal number in least significant 32 bits",
      "name": "InvalidVaultNonce"
    }
  ],
  "instructions": [
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": false,
          "name": "dao"
        },
        {
          "isMut": true,
          "isSigner": true,
          "name": "payer"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "metaMint"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "usdcMint"
        }
      ],
      "args": [],
      "name": "initializeDao"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": true,
          "name": "proposal"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "dao"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "daoTreasury"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "quoteVault"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "baseVault"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "openbookPassMarket"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "openbookFailMarket"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "openbookTwapPassMarket"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "openbookTwapFailMarket"
        },
        {
          "isMut": true,
          "isSigner": true,
          "name": "proposer"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        }
      ],
      "args": [
        {
          "name": "descriptionUrl",
          "type": "string"
        },
        {
          "name": "instruction",
          "type": {
            "defined": "ProposalInstruction"
          }
        }
      ],
      "name": "initializeProposal"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": false,
          "name": "proposal"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "openbookTwapPassMarket"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "openbookTwapFailMarket"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "dao"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "baseVault"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "quoteVault"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "vaultProgram"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "daoTreasury"
        }
      ],
      "args": [],
      "name": "finalizeProposal"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": false,
          "name": "dao"
        },
        {
          "isMut": false,
          "isSigner": true,
          "name": "daoTreasury"
        }
      ],
      "args": [
        {
          "name": "daoParams",
          "type": {
            "defined": "UpdateDaoParams"
          }
        }
      ],
      "name": "updateDao"
    }
  ],
  "name": "autocrat_v0",
  "types": [
    {
      "name": "ProposalInstruction",
      "type": {
        "fields": [
          {
            "name": "programId",
            "type": "publicKey"
          },
          {
            "name": "accounts",
            "type": {
              "vec": {
                "defined": "ProposalAccount"
              }
            }
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "ProposalAccount",
      "type": {
        "fields": [
          {
            "name": "pubkey",
            "type": "publicKey"
          },
          {
            "name": "isSigner",
            "type": "bool"
          },
          {
            "name": "isWritable",
            "type": "bool"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "UpdateDaoParams",
      "type": {
        "fields": [
          {
            "name": "passThresholdBps",
            "type": {
              "option": "u16"
            }
          },
          {
            "name": "baseBurnLamports",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "burnDecayPerSlotLamports",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "slotsPerProposal",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "marketTakerFee",
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "twapExpectedValue",
            "type": {
              "option": "u64"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "ProposalState",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Pending"
          },
          {
            "name": "Passed"
          },
          {
            "name": "Failed"
          }
        ]
      }
    }
  ],
  "version": "0.1.0"
}