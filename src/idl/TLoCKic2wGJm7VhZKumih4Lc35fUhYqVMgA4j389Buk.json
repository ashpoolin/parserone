{
  "accounts": [
    {
      "name": "OrderState",
      "type": {
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "bump",
            "type": {
              "array": [
                "u8",
                1
              ]
            }
          },
          {
            "name": "orderId",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "orderType",
            "type": {
              "defined": "OrderType"
            }
          },
          {
            "name": "nonce",
            "type": "u32"
          },
          {
            "name": "maker",
            "type": "publicKey"
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "currency",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "aprBps",
            "type": "u32"
          },
          {
            "name": "durationSec",
            "type": "u32"
          },
          {
            "name": "whitelist",
            "type": "publicKey"
          },
          {
            "name": "makerBroker",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "margin",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "expiry",
            "type": "i64"
          },
          {
            "name": "createdAt",
            "type": "i64"
          },
          {
            "name": "updatedAt",
            "type": "i64"
          },
          {
            "name": "nftsHeld",
            "type": "u32"
          },
          {
            "name": "vaultBalance",
            "type": "u64"
          },
          {
            "name": "lockedAt",
            "type": "i64"
          },
          {
            "name": "lockedUntil",
            "type": "i64"
          },
          {
            "name": "taker",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "collateralReturned",
            "type": "bool"
          },
          {
            "name": "lastExercisedAt",
            "type": "i64"
          },
          {
            "name": "exerciseCount",
            "type": "u32"
          },
          {
            "name": "accumulatedProfit",
            "type": "u64"
          },
          {
            "name": "takerWithdrawnNfts",
            "type": "u32"
          },
          {
            "name": "takerWithdrawnFunds",
            "type": "u64"
          },
          {
            "name": "reserved",
            "type": {
              "array": [
                "u8",
                128
              ]
            }
          }
        ],
        "kind": "struct"
      }
    }
  ],
  "constants": [
    {
      "name": "ORDER_STATE_SEED",
      "type": "bytes",
      "value": "[111, 114, 100, 101, 114, 95, 115, 116, 97, 116, 101]"
    },
    {
      "name": "ORDER_VAULT_SEED",
      "type": "bytes",
      "value": "[111, 114, 100, 101, 114, 95, 118, 97, 117, 108, 116]"
    },
    {
      "name": "ORDER_STATE_SIZE",
      "type": {
        "defined": "usize"
      },
      "value": "8 + 1 + 1 + 32 + 1 + 4 + 32 + 8 + 33 + 4 + 4 + 32 + 33 + 33 + 8 + 8 + 8 + 4 + 8 + 8 + 8 + 33 + 1 + 8 + 4 + 8 + 4 + 8 + 128"
    },
    {
      "name": "CURRENT_TLOCK_VERSION",
      "type": "u8",
      "value": "1"
    },
    {
      "name": "TLOCK_PREMIUM_FEE_BPS",
      "type": "u64",
      "value": "2500"
    },
    {
      "name": "TLOCK_TRADE_FEE_BPS",
      "type": "u64",
      "value": "200"
    },
    {
      "name": "MAKER_BROKER_PCT",
      "type": "u64",
      "value": "0"
    },
    {
      "name": "TAKER_BROKER_PCT",
      "type": "u64",
      "value": "0"
    },
    {
      "name": "MAX_EXPIRY_SEC",
      "type": "i64",
      "value": "31536000"
    },
    {
      "name": "MAX_DURATION_SEC",
      "type": "u32",
      "value": "2419200"
    },
    {
      "name": "AUTO_EXERCISE_SEC",
      "type": "u32",
      "value": "3600"
    },
    {
      "name": "MAX_APR_BPS",
      "type": "u32",
      "value": "100000"
    },
    {
      "name": "YEAR_SEC",
      "type": "u64",
      "value": "31557600"
    },
    {
      "name": "TLOCK_COSIGNER",
      "type": "string",
      "value": "FyZHRaULHMw9LnVrycpjM6TV9pGDs4TK4bcgvit4EfSj"
    },
    {
      "name": "TLOCK_FEES_COSIGNER",
      "type": "string",
      "value": "99cmWwQMqMFzMPx85rvZYKwusGSjZUDsu6mqYV4iisiz"
    }
  ],
  "errors": [
    {
      "code": 6000,
      "msg": "wrong state version",
      "name": "WrongStateVersion"
    },
    {
      "code": 6001,
      "msg": "currency not yet enabled",
      "name": "CurrencyNotYetEnabled"
    },
    {
      "code": 6002,
      "msg": "maker broker not yet enabled",
      "name": "MakerBrokerNotYetEnabled"
    },
    {
      "code": 6003,
      "msg": "optional royalties not enabled yet",
      "name": "OptionalRoyaltiesNotYetEnabled"
    },
    {
      "code": 6004,
      "msg": "cannot modify whitelist",
      "name": "CannotModifyWhitelist"
    },
    {
      "code": 6005,
      "msg": "cannot modify currency",
      "name": "CannotModifyCurrency"
    },
    {
      "code": 6006,
      "msg": "cannot modify order type",
      "name": "CannotModifyOrderType"
    },
    {
      "code": 6007,
      "msg": "apr too large",
      "name": "AprTooLarge"
    },
    {
      "code": 6008,
      "msg": "duration too long",
      "name": "DurationTooLong"
    },
    {
      "code": 6009,
      "msg": "expiry too large",
      "name": "ExpiryTooLarge"
    },
    {
      "code": 6010,
      "msg": "order expired before being active",
      "name": "OrderExpired"
    },
    {
      "code": 6011,
      "msg": "broker mismatch",
      "name": "BrokerMismatch"
    },
    {
      "code": 6012,
      "msg": "price mismatch",
      "name": "PriceMismatch"
    },
    {
      "code": 6013,
      "msg": "balance does not match price",
      "name": "BalanceMismatch"
    },
    {
      "code": 6014,
      "msg": "nfts held does not match order type",
      "name": "NftsHeldMismatch"
    },
    {
      "code": 6015,
      "msg": "operation does not work for order type",
      "name": "OrderTypeMismatch"
    },
    {
      "code": 6016,
      "msg": "nonce mismatch",
      "name": "NonceMismatch"
    },
    {
      "code": 6017,
      "msg": "order already locked",
      "name": "OrderAlreadyLocked"
    },
    {
      "code": 6018,
      "msg": "order not locked",
      "name": "OrderNotLocked"
    },
    {
      "code": 6019,
      "msg": "order no longer locked (stale)",
      "name": "OrderLockStale"
    },
    {
      "code": 6020,
      "msg": "bad margin",
      "name": "BadMargin"
    },
    {
      "code": 6021,
      "msg": "not enough tokens",
      "name": "NotEnoughTokens"
    },
    {
      "code": 6022,
      "msg": "no nfts held",
      "name": "NoNftsHeld"
    },
    {
      "code": 6023,
      "msg": "still have nfts held",
      "name": "StillNftsHeld"
    },
    {
      "code": 6024,
      "msg": "still have funds held",
      "name": "StillFundsHeld"
    },
    {
      "code": 6025,
      "msg": "signer cannot perform this action",
      "name": "InvalidSigner"
    },
    {
      "code": 6026,
      "msg": "wrong payer for order",
      "name": "WrongPayer"
    },
    {
      "code": 6027,
      "msg": "wrong nft source acc",
      "name": "WrongNftSource"
    },
    {
      "code": 6028,
      "msg": "wrong nft dest",
      "name": "WrongNftDest"
    },
    {
      "code": 6029,
      "msg": "wrong pool type",
      "name": "WrongPoolType"
    },
    {
      "code": 6030,
      "msg": "taker does not match orders",
      "name": "WrongTaker"
    },
    {
      "code": 6031,
      "msg": "price too high",
      "name": "PriceTooHigh"
    },
    {
      "code": 6032,
      "msg": "price too low",
      "name": "PriceTooLow"
    },
    {
      "code": 6033,
      "msg": "collateral not returned to maker",
      "name": "CollateralNotReturned"
    },
    {
      "code": 6034,
      "msg": "collateral already returned to maker",
      "name": "CollateralAlreadyReturned"
    }
  ],
  "instructions": [
    {
      "accounts": [
        {
          "isMut": false,
          "isSigner": false,
          "name": "orderState"
        },
        {
          "isMut": false,
          "isSigner": true,
          "name": "signer"
        }
      ],
      "args": [
        {
          "name": "event",
          "type": {
            "defined": "TLockEvent"
          }
        }
      ],
      "name": "tlockNoop"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": false,
          "name": "tlock"
        },
        {
          "isMut": false,
          "isSigner": true,
          "name": "cosigner"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destination"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ],
      "name": "withdrawFees"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": true,
          "name": "maker"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderState"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderVault"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "whitelist"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "marginAccount"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "makerBroker"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "currency"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "makerTokenAcc"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "orderAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tlockProgram"
        }
      ],
      "args": [
        {
          "name": "orderId",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "orderType",
          "type": {
            "defined": "OrderType"
          }
        },
        {
          "name": "price",
          "type": "u64"
        },
        {
          "name": "expireInSec",
          "type": {
            "option": "u64"
          }
        },
        {
          "name": "aprBps",
          "type": "u32"
        },
        {
          "name": "durationSec",
          "type": "u32"
        }
      ],
      "name": "upsertOrder"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": false,
          "name": "tlock"
        },
        {
          "isMut": true,
          "isSigner": true,
          "name": "taker"
        },
        {
          "isMut": false,
          "isSigner": true,
          "name": "cosigner"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderState"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderVault"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "maker"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "marginAccount"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "makerBroker"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "takerBroker"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tensorswapProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tlockProgram"
        }
      ],
      "args": [
        {
          "name": "price",
          "type": "u64"
        },
        {
          "name": "nonce",
          "type": "u32"
        },
        {
          "name": "aprBps",
          "type": "u32"
        },
        {
          "name": "durationSec",
          "type": "u32"
        }
      ],
      "docs": [
        "Taker locks in order and timer starts."
      ],
      "name": "lockOrder"
    },
    {
      "accounts": [
        {
          "isMut": true,
          "isSigner": true,
          "name": "signer"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderState"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderVault"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "taker"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "maker"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tlockProgram"
        }
      ],
      "args": [],
      "docs": [
        "Taker/maker/anon closes order (depends on state)."
      ],
      "name": "closeOrder"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "docs": [
        "Maker deposits cNFT for NFT order."
      ],
      "name": "depositCompressed"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "docs": [
        "Maker withdraws cNFT from NFT order."
      ],
      "name": "withdrawCompressed"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftSource"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftDest"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "sourceTokenAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "docs": [
        "Maker deposits legacy NFT for NFT order."
      ],
      "name": "depositLegacy"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftSource"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftDest"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "sourceTokenAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "docs": [
        "Maker withdraws legacy NFT from NFT order."
      ],
      "name": "withdrawLegacy"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "dest"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        }
      ],
      "args": [
        {
          "name": "toMaker",
          "type": "bool"
        }
      ],
      "docs": [
        "Taker/maker/anon returns collateral (in SOL) back to maker/taker."
      ],
      "name": "withdrawCollateralSol"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "dest"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "toMaker",
          "type": "bool"
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "dataHash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "creatorHash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ],
      "docs": [
        "Taker/maker/anon returns collateral (cNFT) back to maker."
      ],
      "name": "withdrawCollateralCompressed"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "maker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "dest"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderAtaAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        }
      ],
      "args": [
        {
          "name": "toMaker",
          "type": "bool"
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "docs": [
        "Taker/maker/anon returns collateral (legacy NFT) back to maker."
      ],
      "name": "withdrawCollateralLegacy"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "docs": [
        "Taker receives cNFT, gives SOL"
      ],
      "name": "claimCompressedReceiveNft"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "docs": [
        "Taker receives SOL, gives cNFT"
      ],
      "name": "claimCompressedReceiveSol"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftSource"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftDest"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "sourceTokenAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "docs": [
        "Taker receives cNFT, gives SOL"
      ],
      "name": "claimLegacyReceiveNft"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftSource"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftDest"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "sourceTokenAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "docs": [
        "Taker receives SOL, gives cNFT"
      ],
      "name": "claimLegacyReceiveSol"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "name": "buyCompressed"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "name": "sellCompressed"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftSource"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftDest"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "sourceTokenAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "name": "buyLegacy"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "maker"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isOptional": true,
              "isSigner": false,
              "name": "marginAccount"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftSource"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftDest"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "sourceTokenAcc"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "name": "sellLegacy"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tswap"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "feeVault"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "listing"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftEscrow"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "owner"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "rent"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tensorswap"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "name": "tswapBuySingleListing"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tswap"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "feeVault"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "pool"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftEscrow"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftReceipt"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "solEscrow"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "owner"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "rent"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tensorswap"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "marginAccount"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "docs": [
            "intentionally not deserializing, it would be dummy in the case of VOC/FVC based verification"
          ],
          "isMut": false,
          "isSigner": false,
          "name": "mintProof"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "name": "tswapBuyNft"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tswap"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "feeVault"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "pool"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "solEscrow"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "owner"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftEscrow"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "rent"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tensorswap"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "nftReceipt"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "ownerAtaAcc"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "tempEscrowTokenRecord"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": true,
          "name": "cosigner"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "marginAccount"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "name": "tswapSellNft"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "tcomp"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tcompProgram"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "listState"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "owner"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "rentDest"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "makerBroker"
        }
      ],
      "args": [
        {
          "name": "maxAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "name": "tcompBuy"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "tcomp"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "treeAuthority"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "merkleTree"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "logWrapper"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "compressionProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "bubblegumProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tcompProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tensorswapProgram"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "bidState"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "owner"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "makerBroker"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "marginAccount"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "rentDest"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": true,
          "name": "cosigner"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "index",
          "type": "u32"
        },
        {
          "name": "metaArgs",
          "type": {
            "defined": "TMetadataArgs"
          }
        }
      ],
      "name": "tcompTakeBidCompressed"
    },
    {
      "accounts": [
        {
          "accounts": [
            {
              "isMut": true,
              "isSigner": false,
              "name": "tlock"
            },
            {
              "isMut": true,
              "isSigner": true,
              "name": "signer"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderState"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "taker"
            },
            {
              "isMut": true,
              "isSigner": false,
              "name": "orderVault"
            },
            {
              "docs": [
                "Needed for pool seeds derivation, also checked via has_one on pool"
              ],
              "isMut": false,
              "isSigner": false,
              "name": "whitelist"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "systemProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "tlockProgram"
            }
          ],
          "name": "shared"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "tcomp"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "bidState"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "owner"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "makerBroker"
        },
        {
          "isMut": true,
          "isOptional": true,
          "isSigner": false,
          "name": "marginAccount"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "rentDest"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "orderAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftMint"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftMetadata"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerAtaAcc"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "nftEdition"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "ownerTokenRecord"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "destTokenRecord"
        },
        {
          "isMut": false,
          "isOptional": true,
          "isSigner": false,
          "name": "authRules"
        },
        {
          "accounts": [
            {
              "isMut": false,
              "isSigner": false,
              "name": "tokenMetadataProgram"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "instructions"
            },
            {
              "isMut": false,
              "isSigner": false,
              "name": "authorizationRulesProgram"
            }
          ],
          "name": "pnftShared"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "nftEscrow"
        },
        {
          "isMut": true,
          "isSigner": false,
          "name": "tempEscrowTokenRecord"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "associatedTokenProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tcompProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "tensorswapProgram"
        },
        {
          "isMut": false,
          "isSigner": false,
          "name": "systemProgram"
        }
      ],
      "args": [
        {
          "name": "minAmount",
          "type": "u64"
        },
        {
          "name": "optionalRoyaltyPct",
          "type": {
            "option": "u16"
          }
        },
        {
          "name": "authorizationData",
          "type": {
            "option": {
              "defined": "AuthorizationDataLocal"
            }
          }
        }
      ],
      "name": "tcompTakeBidLegacy"
    }
  ],
  "name": "tlock",
  "types": [
    {
      "name": "TUses",
      "type": {
        "fields": [
          {
            "name": "useMethod",
            "type": {
              "defined": "TUseMethod"
            }
          },
          {
            "name": "remaining",
            "type": "u64"
          },
          {
            "name": "total",
            "type": "u64"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "TCollection",
      "type": {
        "fields": [
          {
            "name": "verified",
            "type": "bool"
          },
          {
            "name": "key",
            "type": "publicKey"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "TMetadataArgs",
      "type": {
        "fields": [
          {
            "docs": [
              "The name of the asset"
            ],
            "name": "name",
            "type": "string"
          },
          {
            "docs": [
              "The symbol for the asset"
            ],
            "name": "symbol",
            "type": "string"
          },
          {
            "docs": [
              "URI pointing to JSON representing the asset"
            ],
            "name": "uri",
            "type": "string"
          },
          {
            "docs": [
              "Royalty basis points that goes to creators in secondary sales (0-10000)"
            ],
            "name": "sellerFeeBasisPoints",
            "type": "u16"
          },
          {
            "name": "primarySaleHappened",
            "type": "bool"
          },
          {
            "name": "isMutable",
            "type": "bool"
          },
          {
            "docs": [
              "nonce for easy calculation of editions, if present"
            ],
            "name": "editionNonce",
            "type": {
              "option": "u8"
            }
          },
          {
            "docs": [
              "Since we cannot easily change Metadata, we add the new DataV2 fields here at the end."
            ],
            "name": "tokenStandard",
            "type": {
              "option": {
                "defined": "TTokenStandard"
              }
            }
          },
          {
            "docs": [
              "Collection"
            ],
            "name": "collection",
            "type": {
              "option": {
                "defined": "TCollection"
              }
            }
          },
          {
            "docs": [
              "Uses"
            ],
            "name": "uses",
            "type": {
              "option": {
                "defined": "TUses"
              }
            }
          },
          {
            "name": "tokenProgramVersion",
            "type": {
              "defined": "TTokenProgramVersion"
            }
          },
          {
            "name": "creatorShares",
            "type": "bytes"
          },
          {
            "name": "creatorVerified",
            "type": {
              "vec": "bool"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "EventOrderState",
      "type": {
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "bump",
            "type": {
              "array": [
                "u8",
                1
              ]
            }
          },
          {
            "name": "orderId",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "orderType",
            "type": {
              "defined": "OrderType"
            }
          },
          {
            "name": "nonce",
            "type": "u32"
          },
          {
            "name": "maker",
            "type": "publicKey"
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "currency",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "aprBps",
            "type": "u32"
          },
          {
            "name": "durationSec",
            "type": "u32"
          },
          {
            "name": "whitelist",
            "type": "publicKey"
          },
          {
            "name": "makerBroker",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "margin",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "expiry",
            "type": "i64"
          },
          {
            "name": "createdAt",
            "type": "i64"
          },
          {
            "name": "updatedAt",
            "type": "i64"
          },
          {
            "name": "nftsHeld",
            "type": "u32"
          },
          {
            "name": "vaultBalance",
            "type": "u64"
          },
          {
            "name": "lockedAt",
            "type": "i64"
          },
          {
            "name": "lockedUntil",
            "type": "i64"
          },
          {
            "name": "taker",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "collateralReturned",
            "type": "bool"
          },
          {
            "name": "lastExercisedAt",
            "type": "i64"
          },
          {
            "name": "exerciseCount",
            "type": "u32"
          },
          {
            "name": "accumulatedProfit",
            "type": "u64"
          },
          {
            "name": "takerWithdrawnNfts",
            "type": "u32"
          },
          {
            "name": "takerWithdrawnFunds",
            "type": "u64"
          },
          {
            "name": "reserved",
            "type": {
              "array": [
                "u8",
                128
              ]
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "UpsertEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "CloseEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "LockEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          },
          {
            "name": "fees",
            "type": {
              "defined": "Fees"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "XferEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          },
          {
            "name": "action",
            "type": {
              "defined": "XferAction"
            }
          },
          {
            "name": "assetType",
            "type": {
              "defined": "AssetType"
            }
          },
          {
            "name": "assetId",
            "type": "publicKey"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "WithdrawCollateralEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          },
          {
            "name": "assetType",
            "type": {
              "option": {
                "defined": "AssetType"
              }
            }
          },
          {
            "name": "assetId",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "amount",
            "type": {
              "option": "u64"
            }
          },
          {
            "name": "toMaker",
            "type": "bool"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "OrderTradeEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          },
          {
            "name": "isClaim",
            "type": "bool"
          },
          {
            "name": "action",
            "type": {
              "defined": "TradeAction"
            }
          },
          {
            "name": "assetType",
            "type": {
              "defined": "AssetType"
            }
          },
          {
            "name": "assetId",
            "type": "publicKey"
          },
          {
            "name": "creatorFee",
            "type": "u64"
          },
          {
            "name": "tlockFee",
            "type": "u64"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "MarketTradeEvent",
      "type": {
        "fields": [
          {
            "name": "order",
            "type": {
              "defined": "EventOrderState"
            }
          },
          {
            "name": "action",
            "type": {
              "defined": "TradeAction"
            }
          },
          {
            "name": "counterparty",
            "type": "publicKey"
          },
          {
            "name": "assetType",
            "type": {
              "defined": "AssetType"
            }
          },
          {
            "name": "assetId",
            "type": "publicKey"
          },
          {
            "name": "finalPrice",
            "type": "u64"
          },
          {
            "name": "profit",
            "type": "u64"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "Fees",
      "type": {
        "fields": [
          {
            "name": "premium",
            "type": "u64"
          },
          {
            "name": "premiumNetFees",
            "type": "u64"
          },
          {
            "name": "totalFee",
            "type": "u64"
          },
          {
            "name": "tlockFee",
            "type": "u64"
          },
          {
            "name": "takerBrokerFee",
            "type": "u64"
          },
          {
            "name": "makerBrokerFee",
            "type": "u64"
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "AuthorizationDataLocal",
      "type": {
        "fields": [
          {
            "name": "payload",
            "type": {
              "vec": {
                "defined": "TaggedPayload"
              }
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "TaggedPayload",
      "type": {
        "fields": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "payload",
            "type": {
              "defined": "PayloadTypeLocal"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "SeedsVecLocal",
      "type": {
        "fields": [
          {
            "docs": [
              "The vector of derivation seeds."
            ],
            "name": "seeds",
            "type": {
              "vec": "bytes"
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "ProofInfoLocal",
      "type": {
        "fields": [
          {
            "docs": [
              "The merkle proof."
            ],
            "name": "proof",
            "type": {
              "vec": {
                "array": [
                  "u8",
                  32
                ]
              }
            }
          }
        ],
        "kind": "struct"
      }
    },
    {
      "name": "TTokenProgramVersion",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Original"
          },
          {
            "name": "Token2022"
          }
        ]
      }
    },
    {
      "name": "TTokenStandard",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "NonFungible"
          },
          {
            "name": "FungibleAsset"
          },
          {
            "name": "Fungible"
          },
          {
            "name": "NonFungibleEdition"
          }
        ]
      }
    },
    {
      "name": "TUseMethod",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Burn"
          },
          {
            "name": "Multiple"
          },
          {
            "name": "Single"
          }
        ]
      }
    },
    {
      "name": "TLockEvent",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "fields": [
              {
                "defined": "UpsertEvent"
              }
            ],
            "name": "Upsert"
          },
          {
            "fields": [
              {
                "defined": "CloseEvent"
              }
            ],
            "name": "Close"
          },
          {
            "fields": [
              {
                "defined": "LockEvent"
              }
            ],
            "name": "Lock"
          },
          {
            "fields": [
              {
                "defined": "XferEvent"
              }
            ],
            "name": "Xfer"
          },
          {
            "fields": [
              {
                "defined": "WithdrawCollateralEvent"
              }
            ],
            "name": "WithdrawCollateral"
          },
          {
            "fields": [
              {
                "defined": "OrderTradeEvent"
              }
            ],
            "name": "OrderTrade"
          },
          {
            "fields": [
              {
                "defined": "MarketTradeEvent"
              }
            ],
            "name": "MarketTrade"
          }
        ]
      }
    },
    {
      "name": "XferAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Deposit"
          },
          {
            "name": "Withdraw"
          }
        ]
      }
    },
    {
      "name": "AssetType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Legacy"
          },
          {
            "name": "Compressed"
          }
        ]
      }
    },
    {
      "name": "TradeAction",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Buy"
          },
          {
            "name": "Sell"
          }
        ]
      }
    },
    {
      "name": "CollateralType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Token"
          },
          {
            "name": "NFT"
          }
        ]
      }
    },
    {
      "name": "PayloadTypeLocal",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "fields": [
              "publicKey"
            ],
            "name": "Pubkey"
          },
          {
            "fields": [
              {
                "defined": "SeedsVecLocal"
              }
            ],
            "name": "Seeds"
          },
          {
            "fields": [
              {
                "defined": "ProofInfoLocal"
              }
            ],
            "name": "MerkleProof"
          },
          {
            "fields": [
              "u64"
            ],
            "name": "Number"
          }
        ]
      }
    },
    {
      "name": "OrderType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Token"
          },
          {
            "name": "NFT"
          }
        ]
      }
    }
  ],
  "version": "1.5.0"
}